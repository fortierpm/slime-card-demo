{"version":3,"sources":["svg/arrow.svg","App.js","reportWebVitals.js","index.js"],"names":["App","cardBgColor","useState","cardState","setCardState","cardFront","useRef","cardBack","screen","useEffect","className","ref","onClick","e","src","arrow","alt","xmlns","viewBox","id","in","stdDeviation","type","tableValues","filter","x","y","width","height","fill","rx","dateTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAe,G,MAAA,IAA0B,mC,OCuJ1BA,MAjJf,WAEE,IAAMC,EAAc,UAEpB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAYC,iBAAO,MACnBC,EAAWD,iBAAO,MAClBE,EAASF,iBAAO,MAYvB,OALCG,qBAAU,cAER,CAACJ,EAAWE,EAAUC,IAIxB,sBAAKE,UAAU,MAAf,UAEI,sBAAKC,IAAKH,EAAQE,UAAU,SAA5B,UAEE,yBAASA,UAAU,OAAnB,SAEE,sBAAKA,UAAU,eAAf,UAEE,sBAAKC,IAAKN,EAAWK,UAAS,qBAAgBP,GAA9C,UACE,oBAAIO,UAAU,aAAd,wBACA,mBAAGA,UAAU,cAAb,0FAGA,wBAAQE,QAvBC,SAACC,GACKT,EAAV,SAAdD,EAAqC,GAAmB,SAsBhBO,UAAS,sBAAiBP,GAAzD,SACE,qBAAKW,IAAKC,EAAOC,IAAI,UAIzB,qBAAKL,IAAKJ,EAAUG,UAAS,oBAAeP,GAA5C,SACE,mBAAGO,UAAU,aAAb,yEASN,yBAASA,UAAU,mBACnB,yBAASA,UAAU,oBAEnB,sBAAKA,UAAU,aACbO,MAAM,6BACNC,QAAO,eAFT,UAGE,iCACE,wBAAQC,GAAG,OAAX,SACE,gCAAgBC,GAAG,gBAAgBC,aAAa,SAElD,wBAAQF,GAAG,cAAX,SACE,gDACE,yBAASG,KAAK,aACd,yBAASA,KAAK,aACd,yBAASA,KAAK,aACd,yBAASA,KAAK,WAAWC,YAAY,gBAI3C,4BACE,mBAAGC,OAAO,oBAAV,SACE,oBAAGA,OAAO,aAAV,UAEE,sBAAMC,EAAE,IAAIC,EAAE,IAAIC,MAAM,OAAOC,OAAO,OAAOC,KAAK,UAElD,sBACEnB,UAAU,WACVe,EAAG,GACHC,EAAGvB,EAAY,IAAM,IACrBwB,MAAO,IACPC,OAAQzB,EAAW,IAAM,IACzB2B,GAAI,GACJD,KAAM5B,IACR,sBACES,UAAU,cACVe,EAAG,GACHC,EAAGvB,EAAY,KAAO,IACtBwB,MAAO,IACPC,OAAQ,IACRE,GAAI,GACJD,KAAM5B,IAER,sBACEwB,EAAGtB,EAAa,IAAiB,IACjCuB,EAAG,IACHC,MAAOxB,EAAY,EAAI,GACvByB,OAAQ,IACRC,KAAM5B,IACR,sBACEwB,EAAGtB,EAAa,IAAiB,IACjCuB,EAAG,IACHC,MAAOxB,EAAY,EAAI,GACvByB,OAAQ,IACRC,KAAM5B,IACR,sBACEwB,EAAGtB,EAAa,IAAiB,IACjCuB,EAAG,IACHC,MAAOxB,EAAY,EAAG,IACtByB,OAAQ,IACRC,KAAM5B,IACR,sBACEwB,EAAGtB,EAAa,IAAY,IAC5BuB,EAAG,IACHC,MAAOxB,EAAY,EAAI,IACvByB,OAAQ,IACRC,KAAM5B,IACR,sBACEwB,EAAGtB,EAAa,IAAiB,IACjCuB,EAAG,IACHC,MAAOxB,EAAY,EAAI,GACvByB,OAAQ,IACRC,KAAM5B,IACR,sBACEwB,EAAGtB,EAAa,IAAiB,IACjCuB,EAAG,IACHC,MAAOxB,EAAY,EAAI,GACvByB,OAAQ,IACRC,KAAM5B,iBASlB,mCACE,qBAAKS,UAAU,OAAf,2BACA,sBAAMqB,SAAS,OAAf,kBACA,qBAAKrB,UAAU,WAAf,+BCpIOsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.663e26dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow.1c6bac54.svg\";","import { useState, useEffect, useRef } from 'react';\n\nimport './App.css';\n\nimport arrow from \"./svg/arrow.svg\";\n\nfunction App() {\n\n  const cardBgColor = \"#1f3a74\";\n\n  const [cardState, setCardState] = useState(\"\");\n\n  const cardFront = useRef(null);\n  const cardBack = useRef(null);\n  const screen = useRef(null);\n  \n  \n  const handleSwitch = (e) => {\n    (cardState === \"open\") ? setCardState(\"\") : setCardState(\"open\");\n  }\n\n  useEffect(() => {\n\n  },[cardFront, cardBack, screen]);\n\n\n\treturn (\n\t\t<div className=\"App\">\n\n      <div ref={screen} className=\"screen\">\n\n        <article className=\"card\">\n\n          <div className=\"card-content\">\n\n            <div ref={cardFront} className={`card-front ${cardState}`}>\n              <h2 className=\"card-title\">Card Title</h2>\n              <p className=\"card-prompt\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repellendus, odit.\n              </p>\n              <button onClick={handleSwitch} className={`card-switch ${cardState}`}>\n                <img src={arrow} alt=\"\" />\n              </button>\n            </div>\n\n            <div ref={cardBack} className={`card-back ${cardState}`}>\n              <p className=\"card-reply\">\n                Asperiores quae repellat nulla. Dolorem, porro iste.\n              </p>\n            </div>\n\n          </div>\n\n        </article>\n\n        <article className=\"next-card left\"></article>\n        <article className=\"next-card right\"></article>\n\n        <svg className=\"card-morph\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox={`0 0 900 1600`}>\n          <defs>\n            <filter id=\"blur\">\n              <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"15\" />\n            </filter>\n            <filter id=\"flattenBlur\">\n              <feComponentTransfer>\n                <feFuncR type=\"identity\"></feFuncR>\n                <feFuncG type=\"identity\"></feFuncG>\n                <feFuncB type=\"identity\"></feFuncB>\n                <feFuncA type=\"discrete\" tableValues=\"0 1\"></feFuncA>\n              </feComponentTransfer>\n            </filter>\n          </defs>\n          <g>\n            <g filter=\"url(#flattenBlur)\">{/*filter=\"url(#blur)\"*/}\n              <g filter=\"url(#blur)\">{/*filter=\"url(#blur)\"*/}\n                {/* Full background rect; required for proper filter effect*/}\n                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#fff0\" />\n                  \n                <rect \n                  className=\"top-rect\"\n                  x={90}\n                  y={cardState ? 325 : 460} // cardState ? \"open\" : \"\"\n                  width={720}\n                  height={cardState? 500 : 680}\n                  rx={95}\n                  fill={cardBgColor}/>\n                <rect \n                  className=\"bottom-rect\"\n                  x={90}\n                  y={cardState ? 1022 : 854}\n                  width={720}\n                  height={286}\n                  rx={95}\n                  fill={cardBgColor}/>\n\n                <rect \n                  x={cardState ? (140 + 20 + 80) : 140}\n                  y={780}\n                  width={cardState ? 0 : 40}\n                  height={280}\n                  fill={cardBgColor}/>\n                <rect\n                  x={cardState ? (220 + 40 + 40) : 220}\n                  y={780}\n                  width={cardState ? 0 : 80}\n                  height={280}\n                  fill={cardBgColor}/>\n                <rect\n                  x={cardState ? (320 + 50 + 20) : 320}\n                  y={780}\n                  width={cardState ? 0: 100}\n                  height={280}\n                  fill={cardBgColor}/>\n                <rect\n                  x={cardState ? (440 + 80) : 440}\n                  y={780}\n                  width={cardState ? 0 : 160}\n                  height={280}\n                  fill={cardBgColor}/>\n                <rect\n                  x={cardState ? (620 + 10 - 40) : 620}\n                  y={780}\n                  width={cardState ? 0 : 20}\n                  height={280}\n                  fill={cardBgColor}/>\n                <rect\n                  x={cardState ? (680 + 40 - 60) : 680}\n                  y={780}\n                  width={cardState ? 0 : 80}\n                  height={280}\n                  fill={cardBgColor}/>\n              </g>\n            </g>\n            {/* Non-blurred content here/below */}\n          </g>\n        </svg>\n\n      </div>\n\n      <footer>\n        <div className=\"name\">Peter Fortier</div>\n        <time dateTime=\"2021\">2021</time>\n        <div className=\"accounts\">@fortierpm</div>\n      </footer>\n\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}